name: "Atmos GitOps Select Components"
description: "A GitHub Action to get list of selected components by jq query"
author: hello@cloudposse.com
branding:
  icon: "file"
  color: "white"
inputs:
  select-filter:
    description: jq query that will be used to select atmos components
    required: false
    default: '.'
  head-ref:
    description: The head ref to checkout. If not provided, the head default branch is used.
    required: false
    default: ${{ github.sha }}
  atmos-gitops-config-path:
    description: The path to the atmos-gitops.yaml file
    required: false
    default: ./.github/config/atmos-gitops.yaml
  jq-version:
    description: The version of jq to install if install-jq is true
    required: false
    default: "1.6"
  debug:
    description: "Enable action debug mode. Default: 'false'"
    default: 'false'
    required: false
  nested-matrices-count:
    required: false
    description: 'Number of nested matrices that should be returned as the output (from 1 to 3)'
    default: "2"
outputs:
  selected-components:
    description: Selected GitOps components
    value: ${{ steps.selected-components.outputs.components }}
  has-selected-components:
    description: Whether there are selected components
    value: ${{ steps.selected-components.outputs.components != '[]' }}
  matrix:
    description: The selected components as matrix structure suitable for extending matrix size workaround (see README)
    value: ${{ steps.matrix.outputs.matrix }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.head-ref }}

    - name: Read Atmos GitOps config
      ## We have to reference cloudposse fork of https://github.com/blablacar/action-config-levels
      ## before https://github.com/blablacar/action-config-levels/pull/16 would be merged
      uses: cloudposse/github-action-config-levels@nodejs20
      id: config
      with:
        output_properties: true
        patterns: |
          - ${{ inputs.atmos-gitops-config-path }}

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version:  ${{ steps.config.outputs.terraform-version }}
        terraform_wrapper: false

    - name: Install Atmos
      uses: cloudposse/github-action-setup-atmos@1.1.0
      env:
       ATMOS_CLI_CONFIG_PATH: ${{inputs.atmos-config-path}}
      with:
        atmos-version: ${{ steps.config.outputs.atmos-version }}
        install-wrapper: false

    - name: Install JQ
      uses: dcarbone/install-jq-action@v1.0.1
      with:
        version: ${{ inputs.jq-version }}

    - name: Filter Components
      id: selected-components
      shell: bash
      env:
        ATMOS_CLI_CONFIG_PATH:  ${{ steps.config.outputs.atmos-config-path }}
        JQUERY: |
          with_entries(.value |= (.components.terraform)) |             ## Deal with components type of terraform
          map_values(map_values(select(${{ inputs.select-filter }}))) | ## Filter components by enabled github actions
          map_values(select(. != {})) |                                 ## Skip stacks that have 0 selected components
          map_values(. | keys) |                                        ## Reduce to component names
          with_entries(                                                 ## Construct component object
            .key as $stack | 
            .value |= map({
              "component": ., 
              "stack": $stack, 
              "stack_slug": [$stack, .] | join("-")
            })
          ) | map(.) | flatten                                          ## Reduce to flat array
      run: |
        atmos describe stacks --format json | jq -ce "${JQUERY}" > components.json

        components=$(cat components.json)
        echo "Selected components: $components"
        printf "%s" "components=$components" >> $GITHUB_OUTPUT

    - uses: cloudposse/github-action-matrix-extended@v0
      id: matrix
      with:
        matrix: components.json
        sort-by: ${{ steps.config.outputs.sort-by }}
        group-by: ${{ steps.config.outputs.group-by }}
        nested-matrices-count: ${{ inputs.nested-matrices-count }}
